.button {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: var(--border-radius);

  user-select: none;

  font: var(--font-xs);
  font-weight: 400;
  line-height: 16px; /* 133.333% */
  letter-spacing: 0.019px;

  --box-shadow: 0 0 0 2px var(--base-weak), 0 0 0 4px var(--complimentary-strong);

  --invert-color: var(--base-strong);
  --invert-background: var(--base-weak);

  --invert-hover-color: var(--base-strong);
  --invert-hover-background: var(--accent-weak);

  --invert-focus-color: var(--base-strong);
  --invert-focus-background: var(--accent-weak);

  --invert-active-color: var(--base-strong);
  --invert-active-background: var(--accent-weak);

  --invert-disabled-color: var(--faint-strong-down);
  --invert-disabled-background: var(--faint-weak-down);

  /* Focus styles will appear when the element is focused using the keyboard.
   Browsers that don't support :focus-visible use the focus styles defined
   in the :focus rule and ignore the second style rule completely */
  &:focus {
    outline: none;
    box-shadow: var(--box-shadow);
  }

  /* Focus styles defined in the :focus rule are only in effect when :focus-visible is also active. */
  &:focus:not(:focus-visible) {
    box-shadow: none;
  }

  &:disabled {
    cursor: not-allowed;
    pointer-events: none;
  }

  white-space: nowrap;
  /* .buttonContent {
    overflow: hidden;
    text-overflow: ellipsis;
  } */
}

.buttonDark {
  --invert-color: var(--faint-weak-up);
  --invert-background: var(--base-strong-down);

  --invert-hover-color: var(--base-weak);
  --invert-hover-background: var(--base-strong);

  --invert-focus-color: var(--faint-weak-up);
  --invert-focus-background: var(--base-strong-down);

  --invert-active-color: var(--accent-strong-down);
  --invert-active-background: var(--base-strong);

  --invert-disabled-color: var(--faint-strong-up);
  --invert-disabled-background: var(--base-strong-down);
}

.buttonInner {
  display: flex;
  align-items: center;
}

.tiny {
  &.withContent {
    .buttonInner {
      padding: 4px 8px;
    }
  }

  .buttonInner {
    padding: 4px 4px;
  }
}

.small {
  padding: 8px 8px;
}

.medium {
  &.withContent {
    .buttonInner {
      padding: 11px 12px;
    }
  }

  .buttonInner {
    padding: 11px 11px;
  }
}

.large {
  text-align: center;
  min-width: min-content;

  white-space: normal;

  &.withContent.withIcon {
    min-height: 76px;
    height: auto;
    justify-content: center;

    .buttonInner {
      padding-bottom: 16px;
      flex-direction: column;
      gap: 4px;
    }
  }

  &.withContent {
    .buttonInner {
      padding: 12px 8px;
    }
  }

  .buttonInner {
    padding: 12px 12px;
  }
}

.tiny,
.small {
  .buttonContent {
    padding: 0 4px;
  }
}

.medium,
.large {
  &.withContent {
    .buttonInner {
      display: flex;
      align-items: center;
      gap: 4px;
    }
  }
}

.iconBefore,
.iconAfter {
  display: inline-flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
}

.primary {
  background-color: var(--accent-strong);
  color: var(--base-weak);
  &:disabled {
    background-color: var(--faint-weak-down);
    color: var(--faint-strong-down);
  }
  &:hover {
    background-color: var(--accent-strong-up);
  }
  &:active,
  &.active {
    background-color: var(--back-accent-strong);
    color: var(--base-weak);
  }
}

.invert-outline {
  color: var(--base-strong);
  background-color: var(--base-weak);
  border: 1px solid var(--faint-weak);
  &:disabled {
    color: var(--faint-strong-down);
    border-color: var(--faint-weak-up);
  }
  &:hover {
    background-color: var(--accent-weak);
    border-color: var(--accent-weak-up);
  }
  &:focus {
    background-color: var(--accent-weak);
    border-color: var(--accent-weak-up);
  }
  &:active,
  &.active {
    background-color: var(--accent-weak);
    border-color: var(--accent-strong);
  }
}

.invert {
  background-color: var(--invert-background);
  color: var(--invert-color);
  &:disabled {
    color: var(--invert-disabled-color);
    background-color: var(--invert-disabled-background);
  }
  &:hover {
    background-color: var(--invert-hover-background);
  }
  &:focus {
    color: var(--invert-focus-color);
    background-color: var(--invert-focus-background);
  }
  &:active,
  &.active {
    color: var(--invert-active-color);
    background-color: var(--invert-active-background);
  }
}

:not(.buttonDark).invert,
:not(.buttonDark).invert-outline {
  &.active,
  &:active,
  &:hover {
    .iconBefore,
    .iconAfter {
      color: var(--accent-strong);
    }
  }
}
